@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');

:root {
    --main-bg-color: #121212;
    --panel-bg-color: rgba(20, 20, 20, 0.8);
    --glow-color: #00ffff;
    --tetris-width: min(90vw, 240px);
    --tetris-height: calc(var(--tetris-width) * 5 / 3);
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Press Start 2P', cursive;
    background-color: var(--main-bg-color);
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    overflow-x: hidden;
    padding: 0;
    margin: 0;
}

.container {
    width: 100%;
    max-width: 1200px;
    padding: 10px;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.game-header {
    text-align: center;
    margin-bottom: 20px;
    position: relative;
    width: 100%;
}

.particles-js {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
}

h1 {
    font-size: clamp(2rem, 5vw, 3rem);
    color: var(--glow-color);
    letter-spacing: clamp(4px, 1vw, 8px);
    text-shadow: 0 0 10px var(--glow-color), 0 0 20px #0000ff;
    margin: 20px 0;
    position: relative;
    animation: glow 1.5s ease-in-out infinite alternate;
}

@keyframes glow {
    from {
        text-shadow: 0 0 5px var(--glow-color), 0 0 10px var(--glow-color);
    }
    to {
        text-shadow: 0 0 10px var(--glow-color), 0 0 20px var(--glow-color), 0 0 30px var(--glow-color);
    }
}

.game-container {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    gap: 20px;
    width: 100%;
    flex-wrap: wrap;
}

.left-panel, .right-panel {
    width: clamp(150px, 20vw, 220px);
    flex-shrink: 0;
}

.panel-content {
    background-color: var(--panel-bg-color);
    border: 2px solid #444;
    border-radius: 8px;
    padding: 15px;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.2);
    height: 100%;
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.main-game {
    position: relative;
    width: var(--tetris-width);
    height: var(--tetris-height);
    margin: 0 10px;
}

#tetris {
    width: 100%;
    height: 100%;
    display: block;
    background-color: #000;
    border: 2px solid #444;
    border-radius: 4px;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.4);
}

#gameOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    pointer-events: none;
}

#pauseIndicator, #gameOverIndicator, #levelUpIndicator, #comboIndicator, #tetrisIndicator, #perfectClear {
    background-color: rgba(0, 0, 0, 0.7);
    color: #ff0;
    padding: 15px;
    border-radius: 8px;
    font-size: clamp(0.8rem, 3vw, 1.3rem);
    display: none;
    text-align: center;
    box-shadow: 0 0 20px rgba(255, 255, 0, 0.5);
    animation: fadeIn 0.3s ease-in-out;
    position: absolute;
}

#gameOverIndicator {
    color: #f00;
    box-shadow: 0 0 20px rgba(255, 0, 0, 0.5);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#levelUpIndicator {
    color: #0f0;
    box-shadow: 0 0 20px rgba(0, 255, 0, 0.5);
    animation: scaleUp 0.5s ease-in-out;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#comboIndicator {
    color: #f0f;
    box-shadow: 0 0 20px rgba(255, 0, 255, 0.5);
    animation: bounce 0.5s ease-in-out;
    top: 30%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#tetrisIndicator {
    color: #0ff;
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
    animation: pulse 0.5s ease-in-out infinite;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
}

#perfectClear {
    color: #ff0;
    background: linear-gradient(135deg, #ff0000, #ff8000, #ffff00, #00ff00, #0000ff, #8000ff);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    text-shadow: 0 0 10px rgba(255, 255, 255, 0.8);
    font-size: clamp(1rem, 4vw, 1.6rem);
    animation: rainbow 1s ease-in-out infinite alternate;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.countdown {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: clamp(2rem, 8vw, 4rem);
    color: var(--glow-color);
    text-shadow: 0 0 10px var(--glow-color);
    z-index: 100;
    display: none;
    animation: countdownAnim 1s ease-in-out;
}

@keyframes countdownAnim {
    0% { transform: translate(-50%, -50%) scale(2); opacity: 0; }
    20% { transform: translate(-50%, -50%) scale(1.5); opacity: 1; }
    80% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
    100% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes scaleUp {
    0% { transform: translate(-50%, -50%) scale(0.5); opacity: 0; }
    70% { transform: translate(-50%, -50%) scale(1.2); }
    100% { transform: translate(-50%, -50%) scale(1); opacity: 1; }
}

@keyframes bounce {
    0%, 100% { transform: translate(-50%, -50%) scale(1); }
    50% { transform: translate(-50%, -50%) scale(1.2); }
}

@keyframes pulse {
    0% { opacity: 0.5; }
    50% { opacity: 1; }
    100% { opacity: 0.5; }
}

@keyframes rainbow {
    0% { filter: hue-rotate(0deg); }
    100% { filter: hue-rotate(360deg); }
}

canvas {
    background-color: #000;
    border: 2px solid #444;
    border-radius: 4px;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.4);
}

#holdPiece, #nextPiece, #nextPiece2, #nextPiece3 {
    max-width: 100%;
    height: auto;
}

h2 {
    font-size: clamp(0.7rem, 2vw, 1rem);
    color: var(--glow-color);
    margin-bottom: 10px;
    text-shadow: 0 0 5px var(--glow-color);
}

.key-hint {
    font-size: clamp(0.5rem, 1.5vw, 0.7rem);
    color: #aaa;
}

.hold-piece, .next-piece {
    text-align: center;
}

.next-piece-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 10px;
}

.statistics {
    margin-top: 20px;
}

.stat-row {
    display: flex;
    justify-content: space-between;
    margin: 10px 0;
    font-size: clamp(0.6rem, 1.5vw, 0.8rem);
}

.controls {
    margin-top: 20px;
}

.control-key {
    display: flex;
    justify-content: space-between;
    margin: 10px 0;
    font-size: clamp(0.5rem, 1.5vw, 0.7rem);
}

.button-container {
    display: flex;
    gap: 10px;
    margin-top: auto;
}

#start-button {
    flex: 3;
}

#sound-button {
    flex: 1;
}

.glow-button {
    padding: 12px;
    background-color: var(--glow-color);
    color: #000;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-family: 'Press Start 2P', cursive;
    font-size: clamp(0.6rem, 1.5vw, 0.9rem);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    box-shadow: 0 0 10px var(--glow-color);
}

.glow-button:hover {
    background-color: #00cccc;
    box-shadow: 0 0 20px var(--glow-color);
}

.glow-button::after {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: linear-gradient(transparent, rgba(255, 255, 255, 0.3), transparent);
    transform: rotate(30deg);
    animation: glowSweep 3s infinite;
}

@keyframes glowSweep {
    0% { transform: translateX(-100%) rotate(30deg); }
    100% { transform: translateX(100%) rotate(30deg); }
}

/* Confetti styles */
.confetti {
    position: absolute;
    width: 10px;
    height: 10px;
    background-color: #f00;
    opacity: 0.8;
    z-index: 1000;
    animation: confettiFall 4s linear forwards;
    pointer-events: none;
}

@keyframes confettiFall {
    0% { transform: translateY(-10px) rotate(0deg); opacity: 1; }
    100% { transform: translateY(calc(100vh)) rotate(720deg); opacity: 0; }
}

/* Mobile controls */
.mobile-controls {
    display: none;
    width: 100%;
    justify-content: center;
    flex-wrap: wrap;
    gap: 10px;
    margin-top: 20px;
}

.mobile-btn {
    width: 60px;
    height: 60px;
    background-color: rgba(0, 255, 255, 0.2);
    border: 2px solid var(--glow-color);
    border-radius: 50%;
    color: var(--glow-color);
    font-size: 24px;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
    transition: all 0.2s ease;
}

.mobile-btn:active {
    background-color: rgba(0, 255, 255, 0.4);
    transform: scale(0.95);
}

/* Media Queries */
@media (max-width: 992px) {
    .game-container {
        gap: 10px;
    }
    
    .left-panel, .right-panel {
        width: min(45%, 200px);
    }
}

@media (max-width: 768px) {
    .game-container {
        flex-direction: column;
        align-items: center;
        gap: 15px;
    }
    
    .main-game {
        order: 1;
    }
    
    .left-panel {
        order: 2;
        width: min(90%, 400px);
    }
    
    .right-panel {
        order: 3;
        width: min(90%, 400px);
    }
    
    .panel-content {
        flex-direction: row;
        flex-wrap: wrap;
        justify-content: space-between;
    }
    
    .hold-piece, .next-piece, .statistics, .controls {
        width: 48%;
    }
    
    .button-container {
        width: 100%;
        margin-top: 15px;
    }
    
    .mobile-controls {
        display: flex;
    }
    
    :root {
        --tetris-width: min(80vw, 300px);
    }
}

@media (max-width: 576px) {
    .panel-content {
        flex-direction: column;
    }
    
    .hold-piece, .next-piece, .statistics, .controls {
        width: 100%;
    }
    
    :root {
        --tetris-width: min(95vw, 300px);
    }
}

/* Animation for flashy rows clearing */
@keyframes flashRow {
    0% { opacity: 1; }
    50% { opacity: 0.2; }
    100% { opacity: 1; }
}

/* Animation for line clear effect */
@keyframes lineClear {
    0% { transform: scaleY(1); }
    50% { transform: scaleY(0.1); opacity: 0.7; }
    100% { transform: scaleY(0); opacity: 0; }
}

/* Animation for piece spawn */
@keyframes pieceSpawn {
    0% { transform: scale(0); opacity: 0; }
    100% { transform: scale(1); opacity: 1; }
}